#!/usr/bin/env php
<?php

/**
 *
 * CLI tool to test the Companion API
 *
 */

// composer auto loader
require __DIR__ . '/../vendor/autoload.php';

use Companion\CompanionApi;
use Companion\Config\CompanionConfig;

// (optional) set filename for where to save tokens
CompanionConfig::setTokenFilename(CompanionConfig::TOKEN_FILENAME);

// create a new token
$api = new CompanionApi('test_token');

// enable async
CompanionConfig::useAsync();

// build our requests, these uuid is just to have something random but this
// could be anything like "our_item_id_123", so long as it's unique per request
$promises = [
    'item_1' => $api->market()->getItemMarketListings(1),
    'item_2' => $api->market()->getItemMarketListings(2),
    'item_3' => $api->market()->getItemMarketListings(3),
];

// settle our promises and wait for the responses
$results = $api->Sight()->settle($promises)->wait();

// handle our promise results
$prices = $api->Sight()->handle($results);

/**
 * $prices will now be an array in the same structure as our $promises
 * but with responses for each key. You will either get JSON decoded as a stdClass
 * or you will get an error response in the format:
 * [
 *  error : 1
 *  state : rejected
 *  reason : exception class -- error message
 * ]
 */

echo "\nResults of first request (should be empty)\n\n";
print_r($prices);
echo "\nWaiting 3 seconds ....\n\n";
sleep(3);

echo "\nResults of next request\n\n";
$results = $api->Sight()->settle($promises)->wait();
$prices = $api->Sight()->handle($results);

print_r($prices);
